1 - Iniciar projeto -> expo init nomeDoProjeto

2 - Resolver problema de tipagem -> adicionar o seguinte código ao package.json
    "resolutions": {
    "@types/react": "17.0.2"
  }

2 - TypeScript
    - Na raiz do projeto, crie um arquivo tsconfig.json vazio;
    - Execute o comando expo start no terminal. 
        O Expo irá identificar o seu arquivo tsconfig.json e perguntar se você quer que ele instale as dependências necessárias e configure 
        automaticamente o seu tsconfig.json. Digite y para aceitar.

3 - Instalação de fontes -> expo install expo-font @expo-google-fonts/nomeDafonte

4 - Spiner de carregamento -> expo install app-loading 

5 - SVG sendo reconhecido -> expo install react-native-svg

6 - SVG como componente -> yarn add react-native-svg-transformer 
    - Precisa mecher no metro.config.js

7 - Header do Iphone -> Yarn add react-native-iphone-x-helper

8 - Calendários -> yarn add react-native-calendars

9 - Navegação -> yarn add react-navigate/native
    docks: https://reactnavigation.org/docs/getting-started/

10 - BUILD -> eas build --platform ios
	eas build --platform android

11 - Animações - expo install react-native-reanimated
    - ver documentação porque tem coisas que devem ser feitas com a instalação
    - cubic-bezier.com -> site para personalizar bezier (efeito de transação)

12 - SplashScreen -> expo install expo-splash-screen

13 - lig de animações performaticas

14 - offiline first 
    buildscript {
    ext {

        /*
            adicione essas duas linhas de comando no final do ext no build.gradle na pasta android
            para ele conseguir rodar o watermelon de boa
        */
        kotlin_version = '1.5.20' 
        kotlinVersion = '1.5.20'
    }
    }